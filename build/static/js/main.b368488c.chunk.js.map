{"version":3,"sources":["util/processUriMap.js","components/NestedList.js","components/SideBar.js","components/TopBar.js","components/App.js","index.js"],"names":["generateMapFromMapOfArray","mapOfArray","result","Object","keys","forEach","key","currentMap","data","item","name","uri","generateMapFromUriData","objectSpread","setSelectedItem","uriArray","selectedName","map","selected","NestedList","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","toggleCollapse","setState","state","open","dataArray","filter","length","_this$props","classes","title","handleClickItem","react_default","a","createElement","className","root","List_default","component","ListItem_default","button","onClick","ListItemIcon_default","Code_default","ListItemText_default","inset","primary","ExpandLess_default","ExpandMore_default","Collapse_default","in","timeout","unmountOnExit","disablePadding","nested","React","Component","withStyles","theme","width","maxWidth","backgroundColor","palette","background","paper","paddingLeft","spacing","unit","list","sectionTitle","fontWeight","fullList","sidebarOpen","toggleSidebar","uriData","permanentSideBar","sideList","components_NestedList","Drawer_default","variant","onClose","tabIndex","role","onKeyDown","ButtonAppBar","anchorEl","handleClick","event","currentTarget","handleClose","Boolean","AppBar_default","position","Toolbar_default","IconButton_default","menuButton","color","aria-label","Menu_default","Typography_default","topBarTitle","aria-haspopup","aria-owns","MoreVert_default","core_Menu_default","id","PaperProps","style","MenuItem_default","window","flexGrow","textAlign","marginLeft","marginRight","App","handleResize","innerWidth","uriMap","addEventListener","_this$state","TopBar","components_SideBar","index_min_default","height","url","concat","scrolling","frameborder","allowtransparency","allowfullscreen","sandbox","ReactDOM","render","components_App","document","getElementById"],"mappings":"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","file":"static/js/main.b368488c.chunk.js","sourcesContent":["/**\n * Sample input: an array of object [{name: \"hello\", uri: 1}, {name: \"world\", uri: 2}]\n * Output should be a single object {hello: 1, world: 2}\n */\nexport function generateMapFromUriData(data) {\n  const result = {};\n  data.forEach(item => {\n    result[item.name] = item.uri;\n  });\n  return result;\n}\n\n/**\n * Sample input is:\n * {ES5: [{name: \"hello\", uri: 1}, {name: \"world\", uri: 2}],\n *  ES6: [{name: \"hi\", uri: 3}, {name: \"there\", uri: 4}]}\n * Output should be a single object {hello: 1, world: 2, hi: 3, there: 4}\n */\nexport function generateMapFromMapOfArray(mapOfArray) {\n  let result = {};\n  Object.keys(mapOfArray).forEach(key => {\n    const currentMap = generateMapFromUriData(mapOfArray[key]);\n    result = { ...result, ...currentMap };\n  });\n  return result;\n}\n\nexport function setSelectedItem(uriArray, selectedName) {\n  return uriArray.map(item => ({ ...item, selected: item.name === selectedName }));\n}\n\nexport function isSelectedItemInArray(uriArray) {\n  const filtered = uriArray.filter(item => item.selected);\n  return filtered.length !== 0;\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Collapse from '@material-ui/core/Collapse';\nimport ExpandLess from '@material-ui/icons/ExpandLess';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport Code from '@material-ui/icons/Code';\nimport { isSelectedItemInArray } from '../util/processUriMap';\n\nconst styles = theme => ({\n  root: {\n    width: '100%',\n    maxWidth: 360,\n    backgroundColor: theme.palette.background.paper,\n  },\n  nested: {\n    paddingLeft: theme.spacing.unit * 4,\n  },\n});\n\nclass NestedList extends React.Component {\n  constructor(props) {\n    super(props);\n    const { dataArray } = props;\n    this.state = { open: isSelectedItemInArray(dataArray) };\n  }\n\n  toggleCollapse = () => {\n    this.setState(state => ({ open: !state.open }));\n  };\n\n  render() {\n    const { classes, title, dataArray, handleClickItem } = this.props;\n    const { open } = this.state;\n\n    return (\n      <div className={classes.root}>\n        <List component=\"nav\">\n          <ListItem button onClick={this.toggleCollapse} key={title}>\n            <ListItemIcon>\n              <Code />\n            </ListItemIcon>\n            <ListItemText inset primary={title} />\n            {open ? <ExpandLess /> : <ExpandMore />}\n          </ListItem>\n          <Collapse in={open} timeout=\"auto\" unmountOnExit>\n            <List component=\"div\" disablePadding>\n              {dataArray.map(item => (\n                <ListItem\n                  button\n                  className={classes.nested}\n                  key={item.name}\n                  onClick={handleClickItem(item.name)}\n                  selected={item.selected}\n                >\n                  <ListItemText primary={item.name} />\n                </ListItem>\n              ))}\n            </List>\n          </Collapse>\n        </List>\n      </div>\n    );\n  }\n}\n\nNestedList.propTypes = {\n  classes: PropTypes.object.isRequired,\n  title: PropTypes.string.isRequired,\n  dataArray: PropTypes.array.isRequired,\n  handleClickItem: PropTypes.func.isRequired,\n};\n\nexport default withStyles(styles)(NestedList);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\n\nimport NestedList from './NestedList';\nimport { setSelectedItem } from '../util/processUriMap';\n\nconst styles = {\n  list: { width: 260 },\n  sectionTitle: { fontWeight: 600 },\n  fullList: { width: 'auto' },\n};\n\nfunction SideBar(props) {\n  const { classes, sidebarOpen, toggleSidebar, handleClickItem, uriData, selectedName, permanentSideBar } = props;\n\n  const sideList = (\n    <div className={classes.list}>\n      <div>\n        {Object.keys(uriData).map(key => (\n          <NestedList\n            handleClickItem={handleClickItem}\n            dataArray={setSelectedItem(uriData[key], selectedName)}\n            title={key}\n            key={key}\n          />\n        ))}\n      </div>\n    </div>\n  );\n\n  return (\n    <div>\n      <Drawer variant={permanentSideBar ? 'permanent' : 'temporary'} open={sidebarOpen} onClose={toggleSidebar(false)}>\n        <div tabIndex={0} role=\"button\" onKeyDown={toggleSidebar(false)}>\n          {sideList}\n        </div>\n      </Drawer>\n    </div>\n  );\n}\n\nSideBar.propTypes = {\n  classes: PropTypes.object.isRequired,\n  toggleSidebar: PropTypes.func.isRequired,\n  handleClickItem: PropTypes.func.isRequired,\n  sidebarOpen: PropTypes.bool.isRequired,\n  permanentSideBar: PropTypes.bool.isRequired,\n  uriData: PropTypes.object.isRequired,\n  selectedName: PropTypes.string.isRequired,\n};\n\nexport default withStyles(styles)(SideBar);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\n\nconst styles = {\n  root: { flexGrow: 1 },\n  topBarTitle: {\n    flexGrow: 1,\n    textAlign: 'center',\n  },\n  menuButton: {\n    marginLeft: -12,\n    marginRight: 20,\n  },\n};\n\nclass ButtonAppBar extends React.Component {\n  state = { anchorEl: null };\n\n  handleClick = event => {\n    this.setState({ anchorEl: event.currentTarget });\n  };\n\n  handleClose = () => {\n    this.setState({ anchorEl: null });\n  };\n\n  render() {\n    const { anchorEl } = this.state;\n    const open = Boolean(anchorEl);\n    const { classes, toggleSidebar, selectedName } = this.props;\n    return (\n      <div className={classes.root}>\n        <AppBar position=\"sticky\">\n          <Toolbar>\n            <IconButton onClick={toggleSidebar(true)} className={classes.menuButton} color=\"inherit\" aria-label=\"Menu\">\n              <MenuIcon />\n            </IconButton>\n            <Typography variant=\"title\" color=\"inherit\" className={classes.topBarTitle}>\n              {selectedName}\n            </Typography>\n            <IconButton\n              aria-label=\"More\"\n              color=\"inherit\"\n              aria-haspopup=\"true\"\n              aria-owns={open ? 'long-menu' : null}\n              onClick={this.handleClick}\n            >\n              <MoreVertIcon />\n            </IconButton>\n          </Toolbar>\n          <Menu\n            id=\"long-menu\"\n            anchorEl={anchorEl}\n            open={open}\n            onClose={this.handleClose}\n            PaperProps={{ style: { width: 200 } }}\n          >\n            <MenuItem\n              key=\"homepage\"\n              onClick={() => window.open('https://gx-chen.github.io/homepage/index.html', '_blank')}\n            >\n              Author&apos;s Homepage\n            </MenuItem>\n            <MenuItem key=\"code-source\" onClick={() => window.open('https://github.com/GX-CHEN', '_blank')}>\n              Author&apos;s Github\n            </MenuItem>\n            <MenuItem\n              key=\"email\"\n              onClick={() => window.open('mailto:chengongxia1990@gmail.com?Subject=From%20JSMastermind', '_top')}\n            >\n              Email Your Feedbacks\n            </MenuItem>\n          </Menu>\n        </AppBar>\n      </div>\n    );\n  }\n}\n\nButtonAppBar.propTypes = {\n  classes: PropTypes.object.isRequired,\n  toggleSidebar: PropTypes.func.isRequired,\n  selectedName: PropTypes.string.isRequired,\n};\n\nexport default withStyles(styles)(ButtonAppBar);\n","import React from 'react';\nimport Iframe from 'react-iframe';\nimport Sidebar from './SideBar';\nimport TopBar from './TopBar';\nimport uriData from '../data/uriData.json';\nimport { generateMapFromMapOfArray } from '../util/processUriMap';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      sidebarOpen: true,\n      uriMap: generateMapFromMapOfArray(uriData),\n      selectedName: uriData['JS Basics'][0].name,\n      permanentSideBar: false,\n    };\n  }\n\n  componentDidMount() {\n    window.addEventListener('resize', this.handleResize);\n    this.handleResize();\n  }\n\n  toggleSidebar = open => () => {\n    this.setState({ sidebarOpen: open });\n  };\n\n  handleClickItem = selectedName => () => {\n    this.setState({\n      selectedName,\n      sidebarOpen: false,\n    });\n  };\n\n  handleResize = () => {\n    this.setState({ permanentSideBar: window.innerWidth > 1160 });\n  };\n\n  render() {\n    const { sidebarOpen, uriMap, selectedName, permanentSideBar } = this.state;\n    return (\n      <div className=\"App\">\n        <TopBar toggleSidebar={this.toggleSidebar} selectedName={selectedName} />\n        <Sidebar\n          sidebarOpen={sidebarOpen}\n          toggleSidebar={this.toggleSidebar}\n          handleClickItem={this.handleClickItem}\n          uriData={uriData}\n          selectedName={selectedName}\n          permanentSideBar={permanentSideBar}\n        />\n        <main style={{ marginLeft: permanentSideBar ? 260 : 0 }}>\n          <div className=\"iframe-wrapper\">\n            <Iframe\n              position=\"relative\"\n              height=\"calc(100vh - 64px)\"\n              width=\"100%\"\n              url={`https://repl.it/@GX_CHEN/${uriMap[selectedName]}?lite=true`}\n              scrolling=\"no\"\n              frameborder=\"no\"\n              allowtransparency=\"true\"\n              allowfullscreen=\"true\"\n              sandbox=\"allow-forms allow-pointer-lock allow-popups allow-same-origin allow-scripts allow-modals\"\n            />\n          </div>\n        </main>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}