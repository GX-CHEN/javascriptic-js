{"version":3,"sources":["util/processUriMap.js","components/NestedList.js","components/SideBar.js","components/TopBar.js","components/App.js","index.js"],"names":["generateMapFromMapOfArray","mapOfArray","result","Object","keys","forEach","key","currentMap","data","item","name","uri","generateMapFromUriData","setSelectedItem","uriArray","selectedName","map","selected","NestedList","props","toggleCollapse","setState","state","open","dataArray","filter","length","this","classes","title","handleClickItem","className","root","component","button","onClick","inset","primary","in","timeout","unmountOnExit","disablePadding","nested","React","Component","withStyles","theme","width","maxWidth","backgroundColor","palette","background","paper","paddingLeft","spacing","unit","list","sectionTitle","fontWeight","fullList","sidebarOpen","toggleSidebar","uriData","permanentSideBar","sideList","variant","onClose","tabIndex","role","onKeyDown","ButtonAppBar","anchorEl","handleClick","event","currentTarget","handleClose","Boolean","position","menuButton","color","aria-label","topBarTitle","aria-haspopup","aria-owns","id","PaperProps","style","window","flexGrow","textAlign","marginLeft","marginRight","App","handleResize","innerWidth","uriMap","addEventListener","TopBar","height","url","scrolling","frameborder","allowtransparency","allowfullscreen","sandbox","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.be476594.chunk.js","sourcesContent":["/**\n * Sample input: an array of object [{name: \"hello\", uri: 1}, {name: \"world\", uri: 2}]\n * Output should be a single object {hello: 1, world: 2}\n */\nexport function generateMapFromUriData(data) {\n  const result = {};\n  data.forEach(item => {\n    result[item.name] = item.uri;\n  });\n  return result;\n}\n\n/**\n * Sample input is:\n * {ES5: [{name: \"hello\", uri: 1}, {name: \"world\", uri: 2}],\n *  ES6: [{name: \"hi\", uri: 3}, {name: \"there\", uri: 4}]}\n * Output should be a single object {hello: 1, world: 2, hi: 3, there: 4}\n */\nexport function generateMapFromMapOfArray(mapOfArray) {\n  let result = {};\n  Object.keys(mapOfArray).forEach(key => {\n    const currentMap = generateMapFromUriData(mapOfArray[key]);\n    result = { ...result, ...currentMap };\n  });\n  return result;\n}\n\nexport function setSelectedItem(uriArray, selectedName) {\n  return uriArray.map(item => ({ ...item, selected: item.name === selectedName }));\n}\n\nexport function isSelectedItemInArray(uriArray) {\n  const filtered = uriArray.filter(item => item.selected);\n  return filtered.length !== 0;\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Collapse from '@material-ui/core/Collapse';\nimport ExpandLess from '@material-ui/icons/ExpandLess';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport Code from '@material-ui/icons/Code';\nimport { isSelectedItemInArray } from '../util/processUriMap';\n\nconst styles = theme => ({\n  root: {\n    width: '100%',\n    maxWidth: 360,\n    backgroundColor: theme.palette.background.paper,\n  },\n  nested: {\n    paddingLeft: theme.spacing.unit * 4,\n  },\n});\n\nclass NestedList extends React.Component {\n  constructor(props) {\n    super(props);\n    const { dataArray } = props;\n    this.state = { open: isSelectedItemInArray(dataArray) };\n  }\n\n  toggleCollapse = () => {\n    this.setState(state => ({ open: !state.open }));\n  };\n\n  render() {\n    const { classes, title, dataArray, handleClickItem } = this.props;\n    const { open } = this.state;\n\n    return (\n      <div className={classes.root}>\n        <List component=\"nav\">\n          <ListItem button onClick={this.toggleCollapse} key={title}>\n            <ListItemIcon>\n              <Code />\n            </ListItemIcon>\n            <ListItemText inset primary={title} />\n            {open ? <ExpandLess /> : <ExpandMore />}\n          </ListItem>\n          <Collapse in={open} timeout=\"auto\" unmountOnExit>\n            <List component=\"div\" disablePadding>\n              {dataArray.map(item => (\n                <ListItem\n                  button\n                  className={classes.nested}\n                  key={item.name}\n                  onClick={handleClickItem(item.name)}\n                  selected={item.selected}\n                >\n                  <ListItemText primary={item.name} />\n                </ListItem>\n              ))}\n            </List>\n          </Collapse>\n        </List>\n      </div>\n    );\n  }\n}\n\nNestedList.propTypes = {\n  classes: PropTypes.object.isRequired,\n  title: PropTypes.string.isRequired,\n  dataArray: PropTypes.array.isRequired,\n  handleClickItem: PropTypes.func.isRequired,\n};\n\nexport default withStyles(styles)(NestedList);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\n\nimport NestedList from './NestedList';\nimport { setSelectedItem } from '../util/processUriMap';\n\nconst styles = {\n  list: { width: 260 },\n  sectionTitle: { fontWeight: 600 },\n  fullList: { width: 'auto' },\n};\n\nfunction SideBar(props) {\n  const { classes, sidebarOpen, toggleSidebar, handleClickItem, uriData, selectedName, permanentSideBar } = props;\n\n  const sideList = (\n    <div className={classes.list}>\n      <div>\n        {Object.keys(uriData).map(key => (\n          <NestedList\n            handleClickItem={handleClickItem}\n            dataArray={setSelectedItem(uriData[key], selectedName)}\n            title={key}\n            key={key}\n          />\n        ))}\n      </div>\n    </div>\n  );\n\n  return (\n    <div>\n      <Drawer variant={permanentSideBar ? 'permanent' : 'temporary'} open={sidebarOpen} onClose={toggleSidebar(false)}>\n        <div tabIndex={0} role=\"button\" onKeyDown={toggleSidebar(false)}>\n          {sideList}\n        </div>\n      </Drawer>\n    </div>\n  );\n}\n\nSideBar.propTypes = {\n  classes: PropTypes.object.isRequired,\n  toggleSidebar: PropTypes.func.isRequired,\n  handleClickItem: PropTypes.func.isRequired,\n  sidebarOpen: PropTypes.bool.isRequired,\n  permanentSideBar: PropTypes.bool.isRequired,\n  uriData: PropTypes.object.isRequired,\n  selectedName: PropTypes.string.isRequired,\n};\n\nexport default withStyles(styles)(SideBar);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\n\nconst styles = {\n  root: { flexGrow: 1 },\n  topBarTitle: {\n    flexGrow: 1,\n    textAlign: 'center',\n  },\n  menuButton: {\n    marginLeft: -12,\n    marginRight: 20,\n  },\n};\n\nclass ButtonAppBar extends React.Component {\n  state = { anchorEl: null };\n\n  handleClick = event => {\n    this.setState({ anchorEl: event.currentTarget });\n  };\n\n  handleClose = () => {\n    this.setState({ anchorEl: null });\n  };\n\n  render() {\n    const { anchorEl } = this.state;\n    const open = Boolean(anchorEl);\n    const { classes, toggleSidebar, selectedName } = this.props;\n    return (\n      <div className={classes.root}>\n        <AppBar position=\"sticky\">\n          <Toolbar>\n            <IconButton onClick={toggleSidebar(true)} className={classes.menuButton} color=\"inherit\" aria-label=\"Menu\">\n              <MenuIcon />\n            </IconButton>\n            <Typography variant=\"title\" color=\"inherit\" className={classes.topBarTitle}>\n              {selectedName}\n            </Typography>\n            <IconButton\n              aria-label=\"More\"\n              color=\"inherit\"\n              aria-haspopup=\"true\"\n              aria-owns={open ? 'long-menu' : null}\n              onClick={this.handleClick}\n            >\n              <MoreVertIcon />\n            </IconButton>\n          </Toolbar>\n          <Menu\n            id=\"long-menu\"\n            anchorEl={anchorEl}\n            open={open}\n            onClose={this.handleClose}\n            PaperProps={{ style: { width: 200 } }}\n          >\n            <MenuItem\n              key=\"homepage\"\n              onClick={() => window.open('https://gx-chen.github.io/homepage/index.html', '_blank')}\n            >\n              Author&apos;s Homepage\n            </MenuItem>\n            <MenuItem key=\"code-source\" onClick={() => window.open('https://github.com/GX-CHEN', '_blank')}>\n              Author&apos;s Github\n            </MenuItem>\n            <MenuItem\n              key=\"email\"\n              onClick={() => window.open('mailto:chengongxia1990@gmail.com?Subject=From%20JSMastermind', '_top')}\n            >\n              Email Your Feedbacks\n            </MenuItem>\n          </Menu>\n        </AppBar>\n      </div>\n    );\n  }\n}\n\nButtonAppBar.propTypes = {\n  classes: PropTypes.object.isRequired,\n  toggleSidebar: PropTypes.func.isRequired,\n  selectedName: PropTypes.string.isRequired,\n};\n\nexport default withStyles(styles)(ButtonAppBar);\n","import React from 'react';\nimport Iframe from 'react-iframe';\nimport Sidebar from './SideBar';\nimport TopBar from './TopBar';\nimport uriData from '../data/uriData.json';\nimport { generateMapFromMapOfArray } from '../util/processUriMap';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      sidebarOpen: true,\n      uriMap: generateMapFromMapOfArray(uriData),\n      selectedName: uriData['JS Basics'][0].name,\n      permanentSideBar: false,\n    };\n  }\n\n  componentDidMount() {\n    window.addEventListener('resize', this.handleResize);\n    this.handleResize();\n  }\n\n  toggleSidebar = open => () => {\n    this.setState({ sidebarOpen: open });\n  };\n\n  handleClickItem = selectedName => () => {\n    this.setState({\n      selectedName,\n      sidebarOpen: false,\n    });\n  };\n\n  handleResize = () => {\n    this.setState({ permanentSideBar: window.innerWidth > 1160 });\n  };\n\n  render() {\n    const { sidebarOpen, uriMap, selectedName, permanentSideBar } = this.state;\n    return (\n      <div className=\"App\">\n        <TopBar toggleSidebar={this.toggleSidebar} selectedName={selectedName} />\n        <Sidebar\n          sidebarOpen={sidebarOpen}\n          toggleSidebar={this.toggleSidebar}\n          handleClickItem={this.handleClickItem}\n          uriData={uriData}\n          selectedName={selectedName}\n          permanentSideBar={permanentSideBar}\n        />\n        <main style={{ marginLeft: permanentSideBar ? 260 : 0 }}>\n          <div className=\"iframe-wrapper\">\n            <Iframe\n              position=\"relative\"\n              height=\"100%\"\n              width=\"100%\"\n              url={`https://repl.it/@GX_CHEN/${uriMap[selectedName]}?lite=true`}\n              scrolling=\"no\"\n              frameborder=\"no\"\n              allowtransparency=\"true\"\n              allowfullscreen=\"true\"\n              sandbox=\"allow-forms allow-pointer-lock allow-popups allow-same-origin allow-scripts allow-modals\"\n            />\n          </div>\n        </main>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}