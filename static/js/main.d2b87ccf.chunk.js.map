{"version":3,"sources":["components/NestedList.js","util/processUriMap.js","components/SideBar.js","components/TopBar.js","components/App.js","index.js"],"names":["NestedList","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","toggleCollapse","setState","state","open","uriArray","dataArray","filter","item","selected","length","_this$props","classes","title","handleClickItem","react_default","a","createElement","className","root","List_default","component","ListItem_default","button","onClick","key","ListItemIcon_default","Code_default","ListItemText_default","inset","primary","ExpandLess_default","ExpandMore_default","Collapse_default","in","timeout","unmountOnExit","disablePadding","map","nested","name","React","Component","withStyles","theme","width","maxWidth","backgroundColor","palette","background","paper","paddingLeft","spacing","unit","list","sectionTitle","fontWeight","fullList","sidebarOpen","toggleSidebar","uriData","selectedName","permanentSideBar","sideList","keys","components_NestedList","objectSpread","setSelectedItem","Drawer_default","variant","onClose","tabIndex","role","onKeyDown","ButtonAppBar","anchorEl","handleClick","event","currentTarget","handleClose","Boolean","AppBar_default","position","Toolbar_default","IconButton_default","menuButton","color","aria-label","Menu_default","Typography_default","topBarTitle","aria-haspopup","aria-owns","MoreVert_default","core_Menu_default","id","PaperProps","style","MenuItem_default","window","flexGrow","textAlign","marginLeft","marginRight","App","handleResize","innerWidth","uriMap","mapOfArray","result","forEach","currentMap","data","uri","generateMapFromUriData","generateMapFromMapOfArray","addEventListener","_this$state","TopBar","components_SideBar","index_min_default","height","url","concat","scrolling","frameborder","allowtransparency","allowfullscreen","sandbox","ReactDOM","render","components_App","document","getElementById"],"mappings":"uYAaA,IAWMA,cACJ,SAAAA,EAAYC,GAAO,IAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACjBE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KAKRQ,eAAiB,WACfP,EAAKQ,SAAS,SAAAC,GAAK,MAAK,CAAEC,MAAOD,EAAMC,SAPtB,ICMiBC,EDJ1BC,EAAcb,EAAda,UAFS,OAGjBZ,EAAKS,MAAQ,CAAEC,MCGmBC,EDHSC,ECKlB,IADVD,EAASE,OAAO,SAAAC,GAAI,OAAIA,EAAKC,WAC9BC,SDRGhB,wEAUV,IAAAiB,EACgDd,KAAKJ,MAApDmB,EADDD,EACCC,QAASC,EADVF,EACUE,MAAOP,EADjBK,EACiBL,UAAWQ,EAD5BH,EAC4BG,gBAC3BV,EAASP,KAAKM,MAAdC,KAER,OACEW,EAAAC,EAAAC,cAAA,OAAKC,UAAWN,EAAQO,MACtBJ,EAAAC,EAAAC,cAACG,EAAAJ,EAAD,CAAMK,UAAU,OACdN,EAAAC,EAAAC,cAACK,EAAAN,EAAD,CAAUO,QAAM,EAACC,QAAS3B,KAAKI,eAAgBwB,IAAKZ,GAClDE,EAAAC,EAAAC,cAACS,EAAAV,EAAD,KACED,EAAAC,EAAAC,cAACU,EAAAX,EAAD,OAEFD,EAAAC,EAAAC,cAACW,EAAAZ,EAAD,CAAca,OAAK,EAACC,QAASjB,IAC5BT,EAAOW,EAAAC,EAAAC,cAACc,EAAAf,EAAD,MAAiBD,EAAAC,EAAAC,cAACe,EAAAhB,EAAD,OAE3BD,EAAAC,EAAAC,cAACgB,EAAAjB,EAAD,CAAUkB,GAAI9B,EAAM+B,QAAQ,OAAOC,eAAa,GAC9CrB,EAAAC,EAAAC,cAACG,EAAAJ,EAAD,CAAMK,UAAU,MAAMgB,gBAAc,GACjC/B,EAAUgC,IAAI,SAAA9B,GAAI,OACjBO,EAAAC,EAAAC,cAACK,EAAAN,EAAD,CACEO,QAAM,EACNL,UAAWN,EAAQ2B,OACnBd,IAAKjB,EAAKgC,KACVhB,QAASV,EAAgBN,EAAKgC,MAC9B/B,SAAUD,EAAKC,UAEfM,EAAAC,EAAAC,cAACW,EAAAZ,EAAD,CAAcc,QAAStB,EAAKgC,qBAnCrBC,IAAMC,WAqDhBC,uBAhEA,SAAAC,GAAK,MAAK,CACvBzB,KAAM,CACJ0B,MAAO,OACPC,SAAU,IACVC,gBAAiBH,EAAMI,QAAQC,WAAWC,OAE5CX,OAAQ,CACNY,YAAkC,EAArBP,EAAMQ,QAAQC,QAyDhBV,CAAmBnD,GExBnBmD,2BA7CA,CACbW,KAAM,CAAET,MAAO,KACfU,aAAc,CAAEC,WAAY,KAC5BC,SAAU,CAAEZ,MAAO,SA0CNF,CAvCf,SAAiBlD,GAAO,IACdmB,EAAkGnB,EAAlGmB,QAAS8C,EAAyFjE,EAAzFiE,YAAaC,EAA4ElE,EAA5EkE,cAAe7C,EAA6DrB,EAA7DqB,gBAAiB8C,EAA4CnE,EAA5CmE,QAASC,EAAmCpE,EAAnCoE,aAAcC,EAAqBrE,EAArBqE,iBAE/EC,EACJhD,EAAAC,EAAAC,cAAA,OAAKC,UAAWN,EAAQ0C,MACtBvC,EAAAC,EAAAC,cAAA,WACGtB,OAAOqE,KAAKJ,GAAStB,IAAI,SAAAb,GAAG,OAC3BV,EAAAC,EAAAC,cAACgD,EAAD,CACEnD,gBAAiBA,EACjBR,UDIL,SAAyBD,EAAUwD,GACxC,OAAOxD,EAASiC,IAAI,SAAA9B,GAAI,OAAAb,OAAAuE,EAAA,EAAAvE,CAAA,GAAUa,EAAV,CAAgBC,SAAUD,EAAKgC,OAASqB,MCL3CM,CAAgBP,EAAQnC,GAAMoC,GACzChD,MAAOY,EACPA,IAAKA,QAOf,OACEV,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACmD,EAAApD,EAAD,CAAQqD,QAASP,EAAmB,YAAc,YAAa1D,KAAMsD,EAAaY,QAASX,GAAc,IACvG5C,EAAAC,EAAAC,cAAA,OAAKsD,SAAU,EAAGC,KAAK,SAASC,UAAWd,GAAc,IACtDI,+ICZLW,6MACJvE,MAAQ,CAAEwE,SAAU,QAEpBC,YAAc,SAAAC,GACZnF,EAAKQ,SAAS,CAAEyE,SAAUE,EAAMC,mBAGlCC,YAAc,WACZrF,EAAKQ,SAAS,CAAEyE,SAAU,gFAGnB,IACCA,EAAa9E,KAAKM,MAAlBwE,SACFvE,EAAO4E,QAAQL,GAFdhE,EAG0Cd,KAAKJ,MAA9CmB,EAHDD,EAGCC,QAAS+C,EAHVhD,EAGUgD,cAAeE,EAHzBlD,EAGyBkD,aAChC,OACE9C,EAAAC,EAAAC,cAAA,OAAKC,UAAWN,EAAQO,MACtBJ,EAAAC,EAAAC,cAACgE,EAAAjE,EAAD,CAAQkE,SAAS,UACfnE,EAAAC,EAAAC,cAACkE,EAAAnE,EAAD,KACED,EAAAC,EAAAC,cAACmE,EAAApE,EAAD,CAAYQ,QAASmC,GAAc,GAAOzC,UAAWN,EAAQyE,WAAYC,MAAM,UAAUC,aAAW,QAClGxE,EAAAC,EAAAC,cAACuE,EAAAxE,EAAD,OAEFD,EAAAC,EAAAC,cAACwE,EAAAzE,EAAD,CAAYqD,QAAQ,QAAQiB,MAAM,UAAUpE,UAAWN,EAAQ8E,aAC5D7B,GAEH9C,EAAAC,EAAAC,cAACmE,EAAApE,EAAD,CACEuE,aAAW,OACXD,MAAM,UACNK,gBAAc,OACdC,YAAWxF,EAAO,YAAc,KAChCoB,QAAS3B,KAAK+E,aAEd7D,EAAAC,EAAAC,cAAC4E,EAAA7E,EAAD,QAGJD,EAAAC,EAAAC,cAAC6E,EAAA9E,EAAD,CACE+E,GAAG,YACHpB,SAAUA,EACVvE,KAAMA,EACNkE,QAASzE,KAAKkF,YACdiB,WAAY,CAAEC,MAAO,CAAEpD,MAAO,OAE9B9B,EAAAC,EAAAC,cAACiF,EAAAlF,EAAD,CACES,IAAI,WACJD,QAAS,kBAAM2E,OAAO/F,KAAK,sCAAuC,YAFpE,qBAMAW,EAAAC,EAAAC,cAACiF,EAAAlF,EAAD,CAAUS,IAAI,cAAcD,QAAS,kBAAM2E,OAAO/F,KAAK,6BAA8B,YAArF,mBAGAW,EAAAC,EAAAC,cAACiF,EAAAlF,EAAD,CACES,IAAI,QACJD,QAAS,kBAAM2E,OAAO/F,KAAK,+DAAgE,UAF7F,kCAnDeqC,IAAMC,WAsElBC,wBAlFA,CACbxB,KAAM,CAAEiF,SAAU,GAClBV,YAAa,CACXU,SAAU,EACVC,UAAW,UAEbhB,WAAY,CACViB,YAAa,GACbC,YAAa,KA0EF5D,CAAmB+B,YCvBnB8B,eA/Db,SAAAA,EAAY/G,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA2G,IACjB9G,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA6G,GAAAxG,KAAAH,KAAMJ,KAcRkE,cAAgB,SAAAvD,GAAI,OAAI,WACtBV,EAAKQ,SAAS,CAAEwD,YAAatD,MAhBZV,EAmBnBoB,gBAAkB,SAAA+C,GAAY,OAAI,WAChCnE,EAAKQ,SAAS,CACZ2D,eACAH,aAAa,MAtBEhE,EA0BnB+G,aAAe,WACb/G,EAAKQ,SAAS,CAAE4D,iBAAkBqC,OAAOO,WAAa,QAzBtDhH,EAAKS,MAAQ,CACXuD,aAAa,EACbiD,OHMC,SAAmCC,GACxC,IAAIC,EAAS,GAKb,OAJAlH,OAAOqE,KAAK4C,GAAYE,QAAQ,SAAArF,GAC9B,IAAMsF,EAjBH,SAAgCC,GACrC,IAAMH,EAAS,GAIf,OAHAG,EAAKF,QAAQ,SAAAtG,GACXqG,EAAOrG,EAAKgC,MAAQhC,EAAKyG,MAEpBJ,EAYcK,CAAuBN,EAAWnF,IACrDoF,EAAMlH,OAAAuE,EAAA,EAAAvE,CAAA,GAAQkH,EAAWE,KAEpBF,EGZKM,CAA0BvD,IAClCC,aAAcD,GAAQ,aAAa,GAAGpB,KACtCsB,kBAAkB,GANHpE,mFAWjByG,OAAOiB,iBAAiB,SAAUvH,KAAK4G,cACvC5G,KAAK4G,gDAkBE,IAAAY,EACyDxH,KAAKM,MAA7DuD,EADD2D,EACC3D,YAAaiD,EADdU,EACcV,OAAQ9C,EADtBwD,EACsBxD,aAAcC,EADpCuD,EACoCvD,iBAC3C,OACE/C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAACqG,GAAD,CAAQ3D,cAAe9D,KAAK8D,cAAeE,aAAcA,IACzD9C,EAAAC,EAAAC,cAACsG,EAAD,CACE7D,YAAaA,EACbC,cAAe9D,KAAK8D,cACpB7C,gBAAiBjB,KAAKiB,gBACtB8C,QAASA,GACTC,aAAcA,EACdC,iBAAkBA,IAEpB/C,EAAAC,EAAAC,cAAA,QAAMgF,MAAO,CAAEK,WAAYxC,EAAmB,IAAM,IAClD/C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACbH,EAAAC,EAAAC,cAACuG,EAAAxG,EAAD,CACEkE,SAAS,WACTuC,OAAO,qBACP5E,MAAM,OACN6E,IAAG,4BAAAC,OAA8BhB,EAAO9C,GAArC,cACH+D,UAAU,KACVC,YAAY,KACZC,kBAAkB,OAClBC,gBAAgB,OAChBC,QAAQ,uGAvDJvF,IAAMC,WCFxBuF,IAASC,OAAOnH,EAAAC,EAAAC,cAACkH,GAAD,MAASC,SAASC,eAAe","file":"static/js/main.d2b87ccf.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Collapse from '@material-ui/core/Collapse';\nimport ExpandLess from '@material-ui/icons/ExpandLess';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport Code from '@material-ui/icons/Code';\nimport { isSelectedItemInArray } from '../util/processUriMap';\n\nconst styles = theme => ({\n  root: {\n    width: '100%',\n    maxWidth: 360,\n    backgroundColor: theme.palette.background.paper,\n  },\n  nested: {\n    paddingLeft: theme.spacing.unit * 4,\n  },\n});\n\nclass NestedList extends React.Component {\n  constructor(props) {\n    super(props);\n    const { dataArray } = props;\n    this.state = { open: isSelectedItemInArray(dataArray) };\n  }\n\n  toggleCollapse = () => {\n    this.setState(state => ({ open: !state.open }));\n  };\n\n  render() {\n    const { classes, title, dataArray, handleClickItem } = this.props;\n    const { open } = this.state;\n\n    return (\n      <div className={classes.root}>\n        <List component=\"nav\">\n          <ListItem button onClick={this.toggleCollapse} key={title}>\n            <ListItemIcon>\n              <Code />\n            </ListItemIcon>\n            <ListItemText inset primary={title} />\n            {open ? <ExpandLess /> : <ExpandMore />}\n          </ListItem>\n          <Collapse in={open} timeout=\"auto\" unmountOnExit>\n            <List component=\"div\" disablePadding>\n              {dataArray.map(item => (\n                <ListItem\n                  button\n                  className={classes.nested}\n                  key={item.name}\n                  onClick={handleClickItem(item.name)}\n                  selected={item.selected}\n                >\n                  <ListItemText primary={item.name} />\n                </ListItem>\n              ))}\n            </List>\n          </Collapse>\n        </List>\n      </div>\n    );\n  }\n}\n\nNestedList.propTypes = {\n  classes: PropTypes.object.isRequired,\n  title: PropTypes.string.isRequired,\n  dataArray: PropTypes.array.isRequired,\n  handleClickItem: PropTypes.func.isRequired,\n};\n\nexport default withStyles(styles)(NestedList);\n","/**\n * Sample input: an array of object [{name: \"hello\", uri: 1}, {name: \"world\", uri: 2}]\n * Output should be a single object {hello: 1, world: 2}\n */\nexport function generateMapFromUriData(data) {\n  const result = {};\n  data.forEach(item => {\n    result[item.name] = item.uri;\n  });\n  return result;\n}\n\n/**\n * Sample input is:\n * {ES5: [{name: \"hello\", uri: 1}, {name: \"world\", uri: 2}],\n *  ES6: [{name: \"hi\", uri: 3}, {name: \"there\", uri: 4}]}\n * Output should be a single object {hello: 1, world: 2, hi: 3, there: 4}\n */\nexport function generateMapFromMapOfArray(mapOfArray) {\n  let result = {};\n  Object.keys(mapOfArray).forEach(key => {\n    const currentMap = generateMapFromUriData(mapOfArray[key]);\n    result = { ...result, ...currentMap };\n  });\n  return result;\n}\n\nexport function setSelectedItem(uriArray, selectedName) {\n  return uriArray.map(item => ({ ...item, selected: item.name === selectedName }));\n}\n\nexport function isSelectedItemInArray(uriArray) {\n  const filtered = uriArray.filter(item => item.selected);\n  return filtered.length !== 0;\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\n\nimport NestedList from './NestedList';\nimport { setSelectedItem } from '../util/processUriMap';\n\nconst styles = {\n  list: { width: 260 },\n  sectionTitle: { fontWeight: 600 },\n  fullList: { width: 'auto' },\n};\n\nfunction SideBar(props) {\n  const { classes, sidebarOpen, toggleSidebar, handleClickItem, uriData, selectedName, permanentSideBar } = props;\n\n  const sideList = (\n    <div className={classes.list}>\n      <div>\n        {Object.keys(uriData).map(key => (\n          <NestedList\n            handleClickItem={handleClickItem}\n            dataArray={setSelectedItem(uriData[key], selectedName)}\n            title={key}\n            key={key}\n          />\n        ))}\n      </div>\n    </div>\n  );\n\n  return (\n    <div>\n      <Drawer variant={permanentSideBar ? 'permanent' : 'temporary'} open={sidebarOpen} onClose={toggleSidebar(false)}>\n        <div tabIndex={0} role=\"button\" onKeyDown={toggleSidebar(false)}>\n          {sideList}\n        </div>\n      </Drawer>\n    </div>\n  );\n}\n\nSideBar.propTypes = {\n  classes: PropTypes.object.isRequired,\n  toggleSidebar: PropTypes.func.isRequired,\n  handleClickItem: PropTypes.func.isRequired,\n  sidebarOpen: PropTypes.bool.isRequired,\n  permanentSideBar: PropTypes.bool.isRequired,\n  uriData: PropTypes.object.isRequired,\n  selectedName: PropTypes.string.isRequired,\n};\n\nexport default withStyles(styles)(SideBar);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\n\nconst styles = {\n  root: { flexGrow: 1 },\n  topBarTitle: {\n    flexGrow: 1,\n    textAlign: 'center',\n  },\n  menuButton: {\n    marginLeft: -12,\n    marginRight: 20,\n  },\n};\n\nclass ButtonAppBar extends React.Component {\n  state = { anchorEl: null };\n\n  handleClick = event => {\n    this.setState({ anchorEl: event.currentTarget });\n  };\n\n  handleClose = () => {\n    this.setState({ anchorEl: null });\n  };\n\n  render() {\n    const { anchorEl } = this.state;\n    const open = Boolean(anchorEl);\n    const { classes, toggleSidebar, selectedName } = this.props;\n    return (\n      <div className={classes.root}>\n        <AppBar position=\"sticky\">\n          <Toolbar>\n            <IconButton onClick={toggleSidebar(true)} className={classes.menuButton} color=\"inherit\" aria-label=\"Menu\">\n              <MenuIcon />\n            </IconButton>\n            <Typography variant=\"title\" color=\"inherit\" className={classes.topBarTitle}>\n              {selectedName}\n            </Typography>\n            <IconButton\n              aria-label=\"More\"\n              color=\"inherit\"\n              aria-haspopup=\"true\"\n              aria-owns={open ? 'long-menu' : null}\n              onClick={this.handleClick}\n            >\n              <MoreVertIcon />\n            </IconButton>\n          </Toolbar>\n          <Menu\n            id=\"long-menu\"\n            anchorEl={anchorEl}\n            open={open}\n            onClose={this.handleClose}\n            PaperProps={{ style: { width: 200 } }}\n          >\n            <MenuItem\n              key=\"homepage\"\n              onClick={() => window.open('https://http://programalchemist.com', '_blank')}\n            >\n              Author&apos;s Homepage\n            </MenuItem>\n            <MenuItem key=\"code-source\" onClick={() => window.open('https://github.com/GX-CHEN', '_blank')}>\n              Author&apos;s Github\n            </MenuItem>\n            <MenuItem\n              key=\"email\"\n              onClick={() => window.open('mailto:chengongxia1990@gmail.com?Subject=From%20JSMastermind', '_top')}\n            >\n              Email Your Feedbacks\n            </MenuItem>\n          </Menu>\n        </AppBar>\n      </div>\n    );\n  }\n}\n\nButtonAppBar.propTypes = {\n  classes: PropTypes.object.isRequired,\n  toggleSidebar: PropTypes.func.isRequired,\n  selectedName: PropTypes.string.isRequired,\n};\n\nexport default withStyles(styles)(ButtonAppBar);\n","import React from 'react';\nimport Iframe from 'react-iframe';\nimport Sidebar from './SideBar';\nimport TopBar from './TopBar';\nimport uriData from '../data/uriData.json';\nimport { generateMapFromMapOfArray } from '../util/processUriMap';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      sidebarOpen: true,\n      uriMap: generateMapFromMapOfArray(uriData),\n      selectedName: uriData['JS Basics'][0].name,\n      permanentSideBar: false,\n    };\n  }\n\n  componentDidMount() {\n    window.addEventListener('resize', this.handleResize);\n    this.handleResize();\n  }\n\n  toggleSidebar = open => () => {\n    this.setState({ sidebarOpen: open });\n  };\n\n  handleClickItem = selectedName => () => {\n    this.setState({\n      selectedName,\n      sidebarOpen: false,\n    });\n  };\n\n  handleResize = () => {\n    this.setState({ permanentSideBar: window.innerWidth > 1160 });\n  };\n\n  render() {\n    const { sidebarOpen, uriMap, selectedName, permanentSideBar } = this.state;\n    return (\n      <div className=\"App\">\n        <TopBar toggleSidebar={this.toggleSidebar} selectedName={selectedName} />\n        <Sidebar\n          sidebarOpen={sidebarOpen}\n          toggleSidebar={this.toggleSidebar}\n          handleClickItem={this.handleClickItem}\n          uriData={uriData}\n          selectedName={selectedName}\n          permanentSideBar={permanentSideBar}\n        />\n        <main style={{ marginLeft: permanentSideBar ? 260 : 0 }}>\n          <div className=\"iframe-wrapper\">\n            <Iframe\n              position=\"relative\"\n              height=\"calc(100vh - 64px)\"\n              width=\"100%\"\n              url={`https://repl.it/@GX_CHEN/${uriMap[selectedName]}?lite=true`}\n              scrolling=\"no\"\n              frameborder=\"no\"\n              allowtransparency=\"true\"\n              allowfullscreen=\"true\"\n              sandbox=\"allow-forms allow-pointer-lock allow-popups allow-same-origin allow-scripts allow-modals\"\n            />\n          </div>\n        </main>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}