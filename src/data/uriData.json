{
  "ES5": [
    { "name": "Array Basic APIs", "uri": "arraypushpopshiftunshift" },
    { "name": "Slice vs Splice", "uri": "arrayslicesplice" },
    { "name": "setTimeOut", "uri": "setTimeOut" },
    { "name": "Closure Scope", "uri": "closurescope" },
    { "name": "Closure Function Factory", "uri": "closurefunctionfactory" },
    { "name": "Closure Count Func Calls", "uri": "closurecountfunctioncalls" },
    { "name": "Apply Call Bind", "uri": "applycallbind" },
    { "name": "Function Chaining", "uri": "functionchaining" },
    { "name": "Function Overload", "uri": "functionoverload" },
    { "name": "Functional Programming", "uri": "functionalprogramming" },
    { "name": "IIFE", "uri": "IIFE" },
    { "name": "IIFE Safety", "uri": "IIFESafety" },
    { "name": "Scope Chain", "uri": "scopechain" },
    { "name": "Self Scope", "uri": "selfscope" },
    { "name": "By Value/Reference", "uri": "byvalueorbyreference" },
    { "name": "Function Are Objects", "uri": "functionareobjects" },
    { "name": "Object Key", "uri": "objectkey" },
    { "name": "Object Literal", "uri": "objectliteral" },
    { "name": "This Keyword In Object", "uri": "thiskeywordinobject" },
    { "name": "3 Ways Create Object", "uri": "threewayforobjectcreation" },
    { "name": "Enhanced ES6 Class", "uri": "enhancedes6class" },
    { "name": "Full ES5 Scope", "uri": "fulles5oop" },
    { "name": "New Keyword", "uri": "newkeyword" },
    { "name": "JS Prototype", "uri": "jsprototype" },
    { "name": "JS Prototype Constructor", "uri": "jsprototypeconstructor" }
  ],
  "ES6": [
    { "name": "Array Every Some", "uri": "arrayeverysome" },
    { "name": "Array Filter Find", "uri": "arrayfilterfind" },
    { "name": "Array Foreach Map", "uri": "arrayforeachmap" },
    { "name": "Array Reduce", "uri": "arrayreduce" },
    { "name": "Array Reduce Example", "uri": "arrayreducematchbraceexample" },
    { "name": "JS Basic Promise", "uri": "jsbasicpromise" },
    { "name": "Practical Promise Eg", "uri": "jspracticalpromiseexample" },
    { "name": "For Of Symbol Iterator", "uri": "forofsymboliterator" },
    { "name": "Symbol Iterator", "uri": "symboliterator" },
    { "name": "Symbol/String Key", "uri": "symbolstringkey" }
  ]
}
